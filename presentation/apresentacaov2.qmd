---
title: "Sistema de Gerenciamento de Estoque 2.0"
subtitle: "Atualização com Árvore e Busca em Profundidade"
author:
    - Iago Flávio
    - Hertz Rafael
    - Cauã Wendel
format:
  revealjs:
    theme: dark
    transition: slide
    slide-number: true
    preview-links: auto
    incremental: true
    embed-resources: true
---

# Introdução

- A versão 2.0 se trata de uma atualização do Sistema de Gerenciamento de Estoque, anteriormente feito em lista encadeada.
- Agora, foi implementado Árvore por Categoria e Busca em Profundidade (DFS) no sistema.

---

## Objetivos da Nova Versão

- Otimizar a **estrutura geral do sistema**, abrindo novas possibilidades ao usar uma estrutura de dados como árvore
- Separação de produtos por categoria e subcategoria
- Implementação do sistema de vendas de produtos, onde se torna possível manipular as vendas de cada produto.

---

## Estrutura Anterior (Lista Encadeada)

![](linkedlist.png)

- Armazenavamos os produtos em cada nó da lista encadeada

---

## Nova Estrutura 2.0 (Árvore de Categoria) {auto-animate="true"}

![](tree.png)

---

## Nova Estrutura 2.0 (Árvore de Categoria) {auto-animate="true"}

Aqui temos dois tipos:

1. Categoria -> Armazena outras categorias (que são subcategorias)
2. Categoria Final -> Armazena produtos e não há outra categoria abaixo dela

---

## Organização do projeto {auto-animate="true"}

- O projeto foi organizado nos seguintes arquivos:

  - `tree.py`: Guarda o funcionamento da árvore e do DFS
  - `produto.py`: Guarda a classe Product, responsável pelas informações dos produtos
  - `estoque.py`: Guarda a principal funcionalidade do sistema, a classe Stock
  - `main.py`: É o coração do sistema de gerenciamento de estoque, que é mostrado ao usuário

## Organização do projeto {auto-animate="true"}

OBS: Na nova versão, substituimos o arquivo `linkedlist.py` pelo `tree.py` com a nova estrutura de dados.

. . .

OBS²: Mantemos a comunicação pelo GitHub, usando Commits e Pull Requests, devido ao sucesso da ferramenta no trabalho colaborativo da versão anterior.

# Metodologia do Projeto {auto-animate="true"}

As principais classes do projeto são:

**Classes Antigas:**

- `Product`: Representa o produto do estoque, contendo suas principais informações como preço, quantidade, id, etc.
- A classe `LinkedList` e a classe `Node` foram removidas na nova versão.

  
# Metodologia do Projeto {auto-animate="true"}

As principais classes do projeto são:

**Classes Novas:**

- `Category`: Representa a categoria ou subcategoria (Ex: Alimentícios).
- `FinalCategory`: Representa a categoria que contêm especificamente os produtos do estoque. (Ex: Frutas, Limpeza)